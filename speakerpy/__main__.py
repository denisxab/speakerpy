import argparse
import pathlib

settings_selero = {
    "ru": {
        "sample_rate": 48000,
        "sp": dict(model_id="ru_v3", language="ru", speaker="aidar", device="cpu"),
    },
    "en": {
        "sample_rate": 48000,
        "sp": dict(model_id="v3_en", language="en", speaker="en_6", device="cpu"),
    },
}


def main(args):
    from .lib_speak import Speaker

    sample_rate = (
        args.sample_rate
        if args.sample_rate
        else settings_selero[args.language]["sample_rate"]
    )

    sp = Speaker(**settings_selero[args.language]["sp"])

    file = pathlib.Path(args.file)
    text = file.read_text()

    if args.type_out == "speak":
        sp.speak(text, sample_rate=sample_rate, speed=args.speed)
    elif args.type_out == "mp3":
        sp.to_mp3(
            text=text,
            name_text=args.name_text if args.name_text else file.name,
            sample_rate=sample_rate,
            audio_dir=args.audio_dir / "mp3",
            speed=args.speed,
        )
    else:
        raise KeyError("–ù–µ —É–∫–∞–∑–∞–Ω–æ - –ö–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—ã–≤–µ—Å—Ç–∏ —Å–µ–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="üéôÔ∏è SpeakerPy: CLI –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º SpeakerPy üéôÔ∏è",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n"
        "  python -m speakerpy -l ru -t speak -f ./books/example.txt;\n"
        "  python -m speakerpy -l ru -t mp3 -f ./books/example.txt;\n"
        "  python -m speakerpy -l en -t speak -f ./books/example.txt;\n"
        "  python -m speakerpy -l en -t mp3 -f ./books/example.txt;\n",
    )
    y = "\033[33m"
    r = "\033[0m"
    parser.add_argument(
        "-l",
        "--language",
        choices=["ru", "en"],
        required=True,
        help=f"{y}–Ø–∑—ã–∫ —Å–∏–Ω—Ç–µ–∑–∞ (ru | en){r}",
    )
    parser.add_argument(
        "-f",
        "--file",
        type=str,
        required=True,
        help=f"{y}–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è{r}",
    )
    parser.add_argument(
        "-t",
        "--type_out",
        choices=["mp3", "speak"],
        required=True,
        help=f"{y}–ö–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—ã–≤–µ—Å—Ç–∏ —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç (mp3 | speak){r}",
    )
    parser.add_argument(
        "-sr",
        "--sample_rate",
        type=int,
        default=48000,
        help=f"{y}–ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 48000){r}",
    )
    parser.add_argument(
        "-s",
        "--speed",
        type=float,
        default=1.0,
        help=f"{y}–°–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1.0){r}",
    )
    parser.add_argument(
        "-n",
        "--name_text",
        type=str,
        default="",
        help=f"{y}–ò–º—è –¥–ª—è —Ç–µ–∫—Å—Ç–∞, —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –∏—Ç–æ–≥–æ–≤—ã–π mp3 —Ñ–∞–π–ª (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—Å—Ç–æ–º){r}",
    )
    parser.add_argument(
        "-a",
        "--audio_dir",
        type=str,
        default=pathlib.Path(__file__).parent.parent,
        help=f"{y}–ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã—Ö –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Ç–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞){r}",
    )

    args = parser.parse_args()

    main(args)
